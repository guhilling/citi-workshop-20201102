---
# tasks file for openshift-gls-gps-workshop

- name: check if ocp_images directoy in libvirt exists on hypervisor.rhaw.io
  stat:
    path: /etc/libvirt/storage/ocp_images.xml
  register: ocp_images

- name: check if ocp_isos directoy in libvirt exists on hypervisor.rhaw.io
  stat:
    path: /etc/libvirt/storage/ocp_isos.xml
  register: ocp_isos

- name: check if ocp4_network in libvirt exists on hypervisor.rhaw.io
  stat:
    path: /etc/libvirt/qemu/networks/ocp4-network.xml
  register: ocp4_network

- name: create directory for images on hypervisor.rhaw.io
  file:
    path: /mnt/ocp_images
    state: directory
    owner: root
    group: root
    mode: 0775
  when: ocp_images.stat.exists == false

- name: create directory for isos on hypervisor.rhaw.io
  file:
    path: /mnt/ocp_isos
    state: directory
    owner: root
    group: root
    mode: 0775
  when: ocp_isos.stat.exists == false

- name: define storage pool as ocp_images on hypervisor.rhaw.io
  virt_pool:
    command: define
    name: ocp_images
    xml: "{{ role_path }}/files/hypervisor_libvirt/hypervisor_ocp_pool_images.xml"
  when: ocp_images.stat.exists == false

- name: build storage pool as ocp_images on hypervisor.rhaw.io
  virt_pool:
    command: build
    name: ocp_images
 when: ocp_images.stat.exists == false

- name: start storage pool as ocp_images on hypervisor.rhaw.io
  virt_pool:
    command: create
    name: ocp_images
  when: ocp_images.stat.exists == false

- name: activate storage pool as ocp_images on hypervisor.rhaw.io
  virt_pool:
    state: active
    name: ocp_images
  when: ocp_images.stat.exists == false

- name: autostart storage pool as ocp_images on hypervisor.rhaw.io
  virt_pool:
    autostart: yes
    name: ocp_images
  when: ocp_images.stat.exists == false

- name: define storage pool as ocp_isos on hypervisor.rhaw.io
  virt_pool:
    command: define
    name: ocp_isos
    xml: "{{ role_path }}/files/hypervisor_libvirt/hypervisor_ocp_pool_isos.xml"
  when: ocp_isos.stat.exists == false

- name: build storage pool as ocp_isos on hypervisor.rhaw.io
  virt_pool:
    command: build
    name: ocp_isos
  when: ocp_isos.stat.exists == false

- name: start storage pool as ocp_isos on hypervisor.rhaw.io
  virt_pool:
    command: create
    name: ocp_isos
  when: ocp_isos.stat.exists == false

- name: activate storage pool as ocp_isos on hypervisor.rhaw.io
  virt_pool:
    state: active
    name: ocp_isos
  when: ocp_isos.stat.exists == false
  
- name: autostart storage pool as ocp_isos on hypervisor.rhaw.io
  virt_pool:
    autostart: yes
    name: ocp_isos
  when: ocp_isos.stat.exists == false
  
- name: define ocp4 network on hypervisor.rhaw.io
  virt_net:
    command: define
    name: ocp4-network
    xml: '{{ lookup("template", "hypervisor_ocp4_network.xml.j2") }}'
  when: ocp4_network.stat.exists == false
  
- name: start ocp4 network on hypervisor.rhaw.io
  virt_net:
    command: create
    name: ocp4_network
  when: ocp4_network.stat.exists == false

- name: activate ocp4 network on hypervisor.rhaw.io
  virt_net:
    state: active
    name: ocp4_network
  when: ocp4_network.stat.exists == false

- name: autostart ocp4 network on hypervisor.rhaw.io
  virt_net:
    autostart: yes
    name: ocp4_network
  when: ocp4_network.stat.exists == false